name: 'Generate Release'
on:
  push:
    branches:
      - main

jobs:
  test-types:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9

      - name: Install app dependencies
        run: pnpm i

      - name: Run typecheck
        run: pnpm tsc

  release-please:
    runs-on: ubuntu-latest
    needs: test-types

    outputs:
      new_release: ${{ steps.release.outputs.release_created }}

    steps:
      - uses: googleapis/release-please-action@v4
        id: release

  build-executable:
    runs-on: windows-latest
    needs: release-please
    environment: publish
    if: needs.release-please.outputs.new_release == 'true'

    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
 
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install app dependencies
        run: pnpm i

      - name: get latest release id
        id: latest_release_id
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.repos.getLatestRelease({ 
              owner: context.repo.owner,
              repo: context.repo.repo
            })

            return data.id

      - uses: tauri-apps/tauri-action@v0
        id: tauri_action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          releaseId: ${{ steps.latest_release_id.outputs.result }}
